/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package crush_saga.events;

import crush_saga.data.CrushSagaDataModel;
import crush_saga.file.CrushSagaFileManager;
import crush_saga.ui.CrushSagaMiniGame;
import crush_saga_main.CrushSaga.CrushSagaPropertyType;
import static crush_saga_main.CrushSagaConstants.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import properties_manager.PropertiesManager;

/**
 *
 * @author Kevin
 */
public class SelectLevelHandler implements ActionListener{
    private CrushSagaMiniGame game;
    private String levelFile;
    public SelectLevelHandler(CrushSagaMiniGame miniGame,String initLevelFile)
    {
        game = miniGame;
        levelFile = initLevelFile;
    }
    public void actionPerformed(ActionEvent ae)
    {
        if(game.isCurrentScreenState(SAGA_SCREEN_STATE))
        {
            PropertiesManager props = PropertiesManager.getPropertiesManager();
            String dataPath = props.getProperty(CrushSagaPropertyType.DATA_PATH);
            ArrayList<String> levels = props.getPropertyOptionsList(CrushSagaPropertyType.LEVEL_OPTIONS);
            ArrayList<String> levelDescriptions = props.getPropertyOptionsList(CrushSagaPropertyType.LEVEL_DESCRIPTIONS);
            CrushSagaDataModel data = (CrushSagaDataModel)game.getDataModel();
            CrushSagaFileManager fileManager = game.getFileManager();
            //load level etc
            //...
            //initiate play level button
            game.getGUIButtons().get(SAGA_PLAY_LEVEL_BUTTON_TYPE).setState(VISIBLE_STATE);
            game.getGUIButtons().get(SAGA_PLAY_LEVEL_BUTTON_TYPE).setEnabled(true);
            game.getGUIButtons().get(LEVEL_DIALOG_CLOSE_BUTTON_TYPE).setState(VISIBLE_STATE);
            game.getGUIButtons().get(LEVEL_DIALOG_CLOSE_BUTTON_TYPE).setEnabled(true);
            data.displayLevelDialog();
            for(int i = 0;i < levels.size();i++)
            {
                if(levelFile.equals(dataPath + levels.get(i)))
                {
                    game.setCurrentLevelDescription(levelDescriptions.get(i));
                    return;
                }
            }
        }
    }
    
}
